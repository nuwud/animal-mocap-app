pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

rootProject.name = 'animalmocapapp'

// Include the main app project first
include ':app'

// Include react-native-fs
include ':react-native-fs'
project(':react-native-fs').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-fs/android')

// Include react-native-gesture-handler
include ':react-native-gesture-handler'
project(':react-native-gesture-handler').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-gesture-handler/android')

// Include react-native-vision-camera module - use node_modules path only
include ':react-native-vision-camera'
project(':react-native-vision-camera').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-vision-camera/android')

// Apply Expo scripts (use a more robust approach for script loading)
def scriptPath
try {
    // A safer way to get the expo autolinking script
    scriptPath = ["node", "--print", "require.resolve('expo/package.json')"].execute(null, rootDir).text.trim()
    if (scriptPath) {
        apply from: new File(scriptPath, "../scripts/autolinking.gradle")
        useExpoModules()
    }
} catch (Exception ignored) {
    logger.warn("Failed to apply Expo autolinking: ${ignored.message}")
}

// Include React Native Gradle plugin more safely
try {
    def reactNativePlugin = ["node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })"].execute(null, rootDir).text.trim()
    if (reactNativePlugin) {
        includeBuild(new File(reactNativePlugin).getParentFile())
    }
} catch (Exception ignored) {
    logger.warn("Failed to include React Native Gradle plugin: ${ignored.message}")
}

// This helps with compatibility issues
gradle.beforeProject { project ->
    if (project.hasProperty("android")) {
        project.android {
            compileSdkVersion = 34
            buildToolsVersion = "34.0.0"
            
            // Add Java 17 compatibility
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_17
                targetCompatibility JavaVersion.VERSION_17
            }
        }
    }
}
